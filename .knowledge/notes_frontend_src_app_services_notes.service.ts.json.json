{"is_source_file": true, "format": "TypeScript", "description": "This file defines the NotesService class, which provides methods for managing notes, including listing, retrieving, creating, updating, and deleting notes, by interacting with a Supabase backend.", "external_files": ["./supabase.service", "../models/note"], "external_methods": ["SupabaseService.client", "supabase.client.auth.getUser"], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "A service class for managing notes via Supabase, providing methods for CRUD operations and search functionality."}], "methods": [{"name": "async list(search?: string): Promise<Note[]> { list", "description": "Fetches a list of notes for the current user, optionally filtered by a search term.", "scope": "NotesService", "scopeKind": "class"}, {"name": "async get(id: string): Promise<Note | null> { get", "description": "Retrieves a single note by its ID.", "scope": "NotesService", "scopeKind": "class"}, {"name": "async create(input: NoteInput): Promise<Note> { create", "description": "Creates a new note for the current user using provided input.", "scope": "NotesService", "scopeKind": "class"}, {"name": "async update(id: string, input: NoteInput): Promise<Note> { update", "description": "Updates an existing note identified by its ID with new data.", "scope": "NotesService", "scopeKind": "class"}, {"name": "async remove(id: string): Promise<void> { remove", "description": "Deletes a note by its ID.", "scope": "NotesService", "scopeKind": "class"}, {"name": "constructor(private supabase: SupabaseService) {} constructor", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "calls": ["supabase.client.auth.getUser", "client.from('notes').select('*')", "client.from('notes').insert(payload).select('*')", "client.from('notes').update({...})", "client.from('notes').delete()"], "search-terms": ["NotesService", "supabase", "list", "get", "create", "update", "remove", "notes"], "state": 2, "file_id": 25, "knowledge_revision": 118, "git_revision": "", "revision_history": [{"52": ""}, {"118": ""}], "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const client: any = this.supabase.client as any;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const client: any = this.supabase.client as any;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.get", "scopeKind": "method"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const client: any = this.supabase.client as any;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.list", "scopeKind": "method"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const client: any = this.supabase.client as any;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.remove", "scopeKind": "method"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const client: any = this.supabase.client as any;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.update", "scopeKind": "method"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  constructor(private supabase: SupabaseService) {}$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      content: input.content,$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  async create(input: NoteInput): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { data, error } = await client$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.update", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { data, error } = await client.from('notes').insert(payload).select('*').single();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { data, error } = await client.from('notes').select('*').eq('id', id).single();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.get", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { data, error } = await query;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.list", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { data: userData } = await client.auth.getUser();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { data, error } = await client$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.update", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { data, error } = await client.from('notes').insert(payload).select('*').single();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { data, error } = await client.from('notes').select('*').eq('id', id).single();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.get", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { data, error } = await query;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.list", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { error } = await client.from('notes').delete().eq('id', id);$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.remove", "scopeKind": "method"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  async get(id: string): Promise<Note | null> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  async list(search?: string): Promise<Note[]> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const payload = {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  async remove(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "s", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const s = `%${search.trim()}%`;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.list", "scopeKind": "method"}, {"_type": "tag", "name": "supabase", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  constructor(private supabase: SupabaseService) {}$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      tags: input.tags ?? [],$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      title: input.title,$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  async update(id: string, input: NoteInput): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/simple-notes-app-12131-12144/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const user_id = userData?.user?.id;$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}], "hash": "3607c438280f475c50768d1bb99561a0", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "constructor(private supabase: SupabaseService) {}", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}]}